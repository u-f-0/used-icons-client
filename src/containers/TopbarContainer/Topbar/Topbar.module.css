@import '../../../styles/customMediaQueries.css';

.root {
  width: 100%;

  /* Top Bar's drop shadow should always be visible */
  z-index: var(--zIndexTopbar);
  position: relative;
}

.container {
  /* Size */
  padding: 0 2rem;
  box-sizing: border-box;
  width: 100%;
  height: var(--topbarHeight);

  /* Layout for child components */
  display: flex;
  align-items: center;
  justify-content: space-between;

  /* fill */
  background-color: var(--colorWhite);

  /* shadows */
  /* box-shadow: var(--boxShadow); */
  background: --colorGrey100;

  @media (--viewportSmall) {
    height: var(--topbarHeightDesktop);
  }

  /* @media (--viewportLarge) {
    display: none;
  } */
}

.searchBar {
  flex-grow: 1;

  @media (--viewportSmall) {
    display: none;
  }
}

.topbarDesktopLabel {
  composes: textSmall from global;
  border: 1px solid black;
  margin: 10px;
  border-radius: 25px;
  padding: 10px 10px 10px 10px;
  width: 12em;
  color: black;
  text-align: center;
  text-decoration: none;

  &:hover {
    background-color: black;
    text-decoration: none;
    color: white;
  }
}

.createListing {
  composes: topbarDesktopLabel;
  background: #39ab4aff;
  border: 1px solid #39ab4aff;
  color: white;

  &:hover {
    background: #61bc6e;
    text-decoration: none;
    transition-duration: 0.3s;
  }

  @media (--viewportSmall) {
    display: none;
  }
}

.browseListing {
  composes: topbarDesktopLabel;
  color: black;

  @media (--viewportMedium) {
    font-weight: var(--fontWeightMedium);
  }

  &:hover {
    text-decoration: none;
    transition-duration: 0.3s;
  }
  @media (--viewportSmall) {
    display: none;
  }
}

.logoutButton {
  margin-top: 1rem;
  border: none;
  padding: 0;
  cursor: pointer;
  color: var(--colorGrey300);
}

.greeting {
  margin-bottom: 1rem;
}

/* Child component's size (and positioning) should be given here */
.menu,
.searchMenu {
  /* Font */
  composes: h5 from global;
  color: var(--colorGrey700);

  /* Layout */
  display: flex;
  box-sizing: border-box;
  margin: 0;
  border-width: 0px;
  background-color: transparent;

  /* Hovers */
  &:enabled {
    cursor: pointer;
  }
  &:enabled:hover,
  &:enabled:active {
    background-color: transparent;
    box-shadow: none;
  }
  &:disabled {
    background-color: transparent;
    cursor: auto;
  }
}

.menu {
  position: relative;
}
.searchMenu {
  padding: 12px 24px;

  @media (--viewportMedium) {
    padding: 18px 24px;
  }
}

.menuIcon,
.searchMenuIcon {
  margin-right: 10px;
  color: black;
  vertical-align: center;
}

.notificationDot {
  /* Dimensions */
  width: 15px;
  height: 15px;
  border-radius: 50%;

  /* Position */
  position: absolute;
  top: 15px;
  right: 5px;

  /* Style: red dot with white border */
  background-color: var(--colorFail);

  animation-name: notificationPop;
  animation-duration: 0.1s;
  animation-delay: 0.1s;
  animation-fill-mode: forwards;

  animation-timing-function: ease-in;
  opacity: 0;
  transform: scale(0);
}

@keyframes notificationPop {
  0% {
    transform: scale(0);
    opacity: 0;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

/* Profile menu */
.profileMenuLabel {
  border-bottom: 0px solid;
  transition: var(--transitionStyleButton);
  font-weight: var(--fontWeightMedium);
  font-size: 14px;
  line-height: 18px;
  letter-spacing: 0;
  color: var(--colorGrey700);
  box-sizing: border-box;
  flex-shrink: 0;
  display: flex;
  align-items: center;
  height: 100%;
  padding-left: 10px;

  &:active {
    border-bottom: 0;
  }
}

.avatar {
  margin-left: 0px;
}

.profileMenuIsOpen {
  &:hover {
    border-bottom: 0;
  }
}

.profileMenuContent {
  position: fixed;
  top: 0;
  right: -300; /* Initially hidden off-screen */
  width: 300px;
  height: 100%;
  background-color: #fff;
  transition: right 0.3s ease;
  z-index: 999;
  padding: 20px;
}

.slide-menu.open {
  right: 0; /* Slide in when open */
}

@media (--viewportSmall) {
  .profileMenuContent {
    padding: 5rem 3rem;
  }
}

.loginIcon {
  box-sizing: border-box;
  width: 30px;
  height: 30px;
  margin-left: 10px;
}

.desktop {
  display: none;

  /* @media (--viewportLarge) {
    display: block;
  } */
}

/* Icon component styles */
.rootMenuIcon {
  fill: black;
}
.rootSearchIcon {
  stroke: black;
}

.searchContainer {
  position: relative;
  height: 100%;
}

.mobileHelp {
  color: var(--colorGrey300);
  margin: 0 24px;

  /* Absolute position to avoid affecting the layout of the autocomplete
   predictions list */
  position: absolute;
  top: 73px;
}

/* ================ Modal ================ */

.modalContainer {
  composes: marketplaceModalInMobileBaseStyles from global;
  padding: 0;

  @media (--viewportMedium) {
    flex-grow: 1;
    min-height: max(100%, 100svh);
    height: auto;
    background-color: var(--colorWhite);
    border-bottom: none;
  }
}
.modalContainerSearchForm {
  composes: modalContainer;
  padding: 0;
  @media (--viewportMedium) {
    padding: var(--modalPaddingMedium);
  }
}

.missingInformationModal {
  composes: marketplaceModalBaseStyles from global;
  padding-top: 70px;
}

/* Title of the modal */
.modalTitle {
  composes: marketplaceModalTitleStyles from global;
}

/* Paragraph for the Modal */
.modalMessage {
  composes: marketplaceModalParagraphStyles from global;
}

/* Make the email pop */
.email {
  font-weight: var(--fontWeightHighlightEmail);
}

.helperLink {
  composes: marketplaceModalHelperLink from global;
}

.helperText {
  composes: marketplaceModalHelperText from global;
}

.error {
  composes: marketplaceModalPasswordMargins from global;
}

.bottomWrapper {
  composes: marketplaceModalBottomWrapper from global;

  /* Align the helper links to the left since there isn't a Primary Button anymore */
  text-align: left;
}

.modalIcon {
  composes: marketplaceModalIconStyles from global;
}

.genericError {
  position: fixed;
  top: calc(var(--topbarHeight) + 15px);

  /* Place enough to the right to hide the error */
  right: -355px;
  opacity: 0;

  max-width: 340px;
  margin: 0 15px;

  /* Animate error from the right */
  transition: all ease-out 0.2s;
  transition-delay: 1s;

  /* Bleed the bg color from the bottom */
  padding-bottom: 4px;
  background-color: var(--marketplaceColor);
  border-radius: var(--borderRadiusMedium);

  /* Place on top of everything */
  z-index: var(--zIndexGenericError);

  @media (--viewportMedium) {
    top: calc(var(--topbarHeightDesktop) + 15px);
  }
}

.genericErrorVisible {
  right: 0;
  opacity: 1;
}

.genericErrorContent {
  padding: 16px 22px;
  background-color: var(--marketplaceColorLight);
  border-radius: var(--borderRadiusMedium);
}

.genericErrorText {
  composes: h5 from global;
  font-weight: var(--fontWeightSemiBold);
  margin: 0;
  color: var(--colorWhite);

  @media (--viewportMedium) {
    margin: 0;
  }
}
